CC=@CC@
CFLAGS=@CFLAGS@ @EXTRA_CFLAGS@
LDFLAGS=@LDFLAGS@ @EXTRA_LDFLAGS@
LIBS=@EXTRA_LIBS@ @LIBS@
FUZZFLAGS=@FUZZFLAGS@ # fuzzer flags
ROOT_DIR=@ROOT_DIR@
DEVELOP_BUILD=@DEVELOP_BUILD@
BINDIR = $(ROOT_DIR)/bin
LIBDIR=$(ROOT_DIR)/lib
SRCDIR=$(ROOT_DIR)/src

COVERAGE_SRC_OBJ=$(SRCDIR)/message.o $(SRCDIR)/util.o
COVERAGE_OBJ=$(addprefix -object , $(COVERAGE_SRC_OBJ))
TESTS=$(filter-out $(SKIP_C_TESTS), $(wildcard test_*.c))
INT_TESTS=$(filter-out $(SKIP_INT_TESTS), $(wildcard test_*.sh))
FUZZERS=$(wildcard fuzz_*.c)
TARGET_TESTS = $(addprefix $(BINDIR)/,$(patsubst %.c,%,$(TESTS)))
TARGET_FUZZERS = $(addprefix $(BINDIR)/,$(patsubst %.c,%,$(FUZZERS)))
TARGET_TPROFILES = $(addprefix $(BINDIR)/,$(patsubst %.c,%.profraw,$(TESTS))) \
				   $(addprefix $(BINDIR)/,$(patsubst %.sh,%.sh.profraw,$(INT_TESTS)))
TARGET_FPROFILES = $(addprefix $(BINDIR)/,$(patsubst %.c,%.profraw,$(FUZZERS)))

LIB = $(LIBDIR)/libsonic.a

TESTPROFDATA=$(BINDIR)/tests.profdata
FUZZPROFDATA=$(BINDIR)/fuzz.profdata

.PHONY: clean test fuzz coverage html-coverage fuzz-coverage fuzz-html-coverage purge

ifeq ($(DEVELOP_BUILD),yes)
test: unit_test int_test
else
test: int_test
endif

unit_test: $(TARGET_TESTS)
	@ set -e; for f in $^; do echo "  TEST	$$f" && LLVM_PROFILE_FILE="$$f.profraw" $$f --silent; done

int_test: $(INT_TESTS)
	@ set -e; for f in $^; do echo "  TEST	$$f" && LLVM_PROFILE_FILE="$(BINDIR)/$$f.profraw" ./$$f; done

$(BINDIR)/test_%: test_%.c $(LIB)
	$(CC) $(LDFLAGS) $(CFLAGS) $(addprefix ../src/,$(patsubst test_%.c, %.c, $<)) $< -o $@ $(LIB) $(LIBS)

$(TESTPROFDATA): int_test unit_test
	llvm-profdata merge -sparse $(TARGET_TPROFILES) -o $(TESTPROFDATA)

coverage: $(TESTPROFDATA)
	llvm-cov report -instr-profile=$(TESTPROFDATA) $(COVERAGE_OBJ)

html-coverage: $(TESTPROFDATA) BROWSER
	llvm-cov show -format=html -instr-profile=$(TESTPROFDATA) $(COVERAGE_OBJ) > $(BINDIR)/coverage.html
	@$(BROWSER) $(BINDIR)/coverage.html

fuzz: $(TARGET_FUZZERS)
	@ for f in $^; do mkdir -p $$f.corpus && LLVM_PROFILE_FILE="$$f.profraw" $$f $$f.corpus $(FUZZFLAGS); done; wait

# clang version >= April 2017 required (tested with 6.0.0 trunk 310227)
$(BINDIR)/fuzz_%: fuzz_%.c $(LIB)
	$(CC) $(LDFLAGS) $(CFLAGS) -fsanitize=fuzzer $(addprefix ../src/,$(patsubst fuzz_%.c, %.c, $<)) $< -o $@ $(LIB)

$(FUZZPROFDATA): $(TARGET_FUZZERS)
	llvm-profdata merge -sparse $(TARGET_FPROFILES) -o $(FUZZPROFDATA)

fuzz-coverage: $(FUZZPROFDATA)
	llvm-cov report -instr-profile=$(FUZZPROFDATA) $(COVERAGE_OBJ)

fuzz-html-coverage: $(FUZZPROFDATA) BROWSER
	llvm-cov show -format=html -instr-profile=$(FUZZPROFDATA) $(COVERAGE_OBJ) > $(BINDIR)/fuzz-coverage.html
	@$(BROWSER) $(BINDIR)/fuzz-coverage.html

clean:
	@rm -f $(TARGET_TESTS) $(TARGET_FUZZERS) $(FUZZPROFDATA) $(TESTPROFDATA) $(TARGET_TPROFILES) $(TARGET_FPROFILES)
	@ rm -f *.profraw

BROWSER:
ifndef BROWSER
	$(error BROWSER env variable is undefined)
endif

purge: clean
